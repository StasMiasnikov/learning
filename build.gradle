def terraformWorkDir = 'Infra/src/config/terraform'


task tfInit(type: Exec) {
    workingDir terraformWorkDir
    outputs.upToDateWhen { false }
    commandLine 'cmd', '/c', 'terraform init'
}

task tfDestroy(type: Exec) {
    dependsOn 'tfInit'
    workingDir terraformWorkDir
    outputs.upToDateWhen { false }
    commandLine 'cmd', '/c', "terraform destroy --auto-approve"
}
task tfPlan(type: Exec) {
    dependsOn 'tfDestroy'
    workingDir terraformWorkDir
    outputs.upToDateWhen { false }
    commandLine 'cmd', '/c', "terraform plan"
}
task tfApply(type: Exec) {
    dependsOn 'tfPlan'
    workingDir terraformWorkDir
    outputs.upToDateWhen { false }
    commandLine 'cmd', '/c', "terraform apply --auto-approve"
}


task buildUI(type: Exec) {
    workingDir 'App/client'
    outputs.upToDateWhen { false }
    commandLine 'cmd', '/c', 'echo " buildUI IMPLEMENT ME"'
}

task buildServer(type: Exec) {
    workingDir 'App/server'
    outputs.upToDateWhen { false }
    commandLine 'cmd', '/c', 'mvn clean package'
}


task execute() {
    dependsOn 'tfApply'
    dependsOn 'buildUI'
    dependsOn 'buildServer'
}
defaultTasks 'execute'